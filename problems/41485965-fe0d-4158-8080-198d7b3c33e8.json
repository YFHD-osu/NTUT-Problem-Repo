{
  "uuid": "41485965-fe0d-4158-8080-198d7b3c33e8",
  "title": "5. 最佳資費選擇",
  "createDate": 1741795140000,
  "collections": [
    "8d3b2553-11f4-4605-8795-a54879b55525"
  ],
  "problem": [
    "輸入每月網內、網外、市話、通話時間(秒)及網內、網外簡訊則數，求花費最少的資費類型。",
    "",
    "費率如下表：",
    "資費類型      183型     383型     983型",
    "月租費        183元     383元     983元",
    "",
    "免費額度",
    "通話時間",
    "(秒)\t   網內 500\t      600\t     700",
    "(秒)\t   網外 400\t      500\t     600",
    "(秒)\t   市話 300\t      400\t     500",
    "簡訊數量",
    "(則)\t   網內 10\t\t20\t     30",
    "(則)\t   網外 15\t\t25\t     35",
    "",
    "語音費率 網內 0.08       0.07       0.06",
    "(元/秒)  網外 0.1393     0.1304     0.1087",
    "(元/秒)  市話 0.1349     0.1217     0.1018",
    "",
    "簡訊費率 網內 1.1287     1.1127     0.9572",
    "(元/則)  網外 1.4803     1.2458     1.1243",
    "",
    "優惠內容",
    "1. 每個資費方案都有各自的「免費通話時間」和「免費簡訊數量」額度：",
    "當用戶的通話時間或簡訊數量超過免費額度時，則超過的額度按費率進行收費。",
    "例如：",
    "選擇183型，使用網內語音1800秒，以超過額度計算金額：(1800-500) * 0.08。",
    "2. 月租費可抵等額通信費 :",
    "若總通信費(包含通話時間、簡訊數量)高於該資費類型的費用，則以原費用進行收費，若低於該資費類型的費用，則以該資費類型的費用進行收費。",
    "例如:",
    "選擇183型，總通信費為200元，則應繳金額為200元",
    "若總通信費為150元，則應繳金額為183元。",
    "",
    "【輸入說明】",
    "第一行，輸入網內語音(秒, Integer)、網外語音(秒, Integer)、輸入市話(秒, Integer)、輸入內簡訊數(則, Integer)、輸入網外簡訊數(則, Integer)",
    "每個數字以空格作區隔",
    "",
    "範例輸入說明:",
    "Sample Input:",
    "500 120 130 20 50",
    "",
    "",
    "【輸出說明】",
    "第一行，輸出最佳費用(無條件捨去至Integer)",
    "第二行，輸出最佳資費類型，(183, 383, 983)",
    "",
    "範例輸出說明:",
    "Sample Output:",
    "183",
    "183"
  ],
  "testcase": {
    "codeType": 1,
    "cases": [
      {
        "input": [
          "900 600 500 70 30"
        ],
        "output": [
          "183",
          "183"
        ]
      },
      {
        "input": [
          "1500 2200 980 60 80"
        ],
        "output": [
          "468",
          "383"
        ]
      },
      {
        "input": [
          "1000 1800 500 80 100"
        ],
        "output": [
          "383",
          "383"
        ]
      },
      {
        "input": [
          "2190 3785 1850 100 180"
        ],
        "output": [
          "983",
          "983"
        ]
      },
      {
        "input": [
          "5000 4500 300 200 200"
        ],
        "output": [
          "1030",
          "983"
        ]
      },
      {
        "input": [
          "500 500 500 10 10"
        ],
        "output": [
          "183",
          "183"
        ]
      }
    ]
  },
  "sampleCode": [
    "#include <stdio.h>",
    "",
    "int data[5] = {};",
    "// internalCall",
    "// externalCall",
    "// cityLineCall",
    "// internalSms",
    "// externalSms",
    "",
    "double max(double a, double b) {",
    "  return (a > b) ? a: b;",
    "}",
    "",
    "double calc(int data[5], double flare[10]) {",
    "  double _sum = 0;",
    "",
    "  // Calculate Internal Call Fee",
    "  if (data[0] > flare[0]) {",
    "    _sum += (data[0] - flare[0]) * flare[5];",
    "  }",
    "",
    "  // Calculate External Call Fee",
    "  if (data[1] > flare[1]) {",
    "    _sum += (data[1] - flare[1]) * flare[6];",
    "  }",
    "",
    "  // Calculate Citylane Call Fee",
    "  if (data[2] > flare[2]) {",
    "    _sum += (data[2] - flare[2]) * flare[7];",
    "  }",
    "",
    "  // Calculate Internal SMS Fee",
    "  if (data[3] > flare[3]) {",
    "    _sum += (data[3] - flare[3]) * flare[8];",
    "  }",
    "",
    "  // Calculate External SMS Fee",
    "  if (data[4] > flare[4]) {",
    "    _sum += (data[4] - flare[4]) * flare[9];",
    "  }",
    "",
    "  return _sum;",
    "}",
    "",
    "int min(double data[]) {",
    "  double target = data[0];",
    "  int index = 0;",
    "",
    "  for (int i=0; i<3 ;i++) {",
    "    if (data[i] >= target) continue;",
    "    ",
    "    index = i;",
    "    target = data[i];",
    "  }",
    "",
    "  return index;",
    "}",
    "",
    "double _183flare[10] = {",
    "  500.0,  // [0] Internal Call Free",
    "  400.0,  // [1] External Call Free",
    "  300.0,  // [2] Citylane Call Free",
    "  10,     // [3] Internal SMS Free",
    "  15,     // [4] External SMS Free",
    "  0.08 ,  // [5] Internal Call Flare",
    "  0.1393, // [6] External Call Flare",
    "  0.1349, // [7] Citylane Call Flare",
    "  1.1287, // [8] Internal SMS Flare,",
    "  1.4803  // [9] External SMS Flare",
    "};",
    "",
    "double _383flare[10] = {",
    "  600.0,  // [0] Internal Call Free",
    "  500.0,  // [1] External Call Free",
    "  400.0,  // [2] Citylane Call Free",
    "  20,     // [3] Internal SMS Free",
    "  25,     // [4] External SMS Free",
    "  0.07 ,  // [5] Internal Call Flare",
    "  0.1304, // [6] External Call Flare",
    "  0.1217, // [7] Citylane Call Flare",
    "  1.1127, // [8] Internal SMS Flare,",
    "  1.2458  // [9] External SMS Flare",
    "};",
    "",
    "double _983flare[10] = {",
    "  700.0,  // [0] Internal Call Free",
    "  600.0,  // [1] External Call Free",
    "  500.0,  // [2] Citylane Call Free",
    "  30,     // [3] Internal SMS Free",
    "  35,     // [4] External SMS Free",
    "  0.06 ,  // [5] Internal Call Flare",
    "  0.1087, // [6] External Call Flare",
    "  0.1018, // [7] Citylane Call Flare",
    "  0.9572, // [8] Internal SMS Flare,",
    "  1.1243  // [9] External SMS Flare",
    "};",
    "",
    "char names[3][3] = {",
    "  \"183\",",
    "  \"383\",",
    "  \"983\",",
    "};",
    "",
    "int main() {",
    "  scanf(\"%d %d %d %d %d\", &data[0], &data[1], &data[2], &data[3], &data[4]);",
    "",
    "  double flare[] = {",
    "    max( calc(data, _183flare), 183.0 ),",
    "    max( calc(data, _383flare), 383.0 ),",
    "    max( calc(data, _983flare), 983.0 ),",
    "  };",
    "",
    "  // printf(\"%f\\n\", flare[0]);",
    "",
    "  int index = min(flare);",
    "",
    "  printf(\"%d\\n\", (int) flare[index]);",
    "",
    "  switch (index) {",
    "    case 0: ",
    "      printf(\"183\");",
    "      break;",
    "",
    "    case 1: ",
    "      printf(\"383\");",
    "      break;",
    "",
    "    case 2: ",
    "      printf(\"983\");",
    "      break;",
    "",
    "  }",
    "  return 0;",
    "}"
  ]
}