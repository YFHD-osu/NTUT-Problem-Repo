{
  "uuid": "14d14b6f-11e9-4374-94e8-9647f14de357",
  "title": "5. 判斷何種三角形",
  "createDate": 1750302596246,
  "collections": [
    "9b99bc6a-12d6-4347-87c5-9cc2082e7508"
  ],
  "problem": [
    "輸入三角形邊長a, b, c,判斷該三角形為正三角、等腰、鈍角、銳角、直角或是無法構成三角形，並輸出結果(若符合多種三角形則按照輸出格式編號順序輸出)。",
    "判別方法如下:",
    "1. 不能成為三角形：任兩邊和不大於第三邊，或任一邊長不大於0。",
    "2. 正三角形：三個邊相等。",
    "3. 等腰三角形：任兩邊相等。",
    "4. 鈍角三角形: 最長邊平方大於兩短邊平方和。",
    "5. 銳角三角形: 最長邊平方小於兩短邊平方和。",
    "6. 直角三角形: 最長邊平方等於兩短邊平方和。",
    "【輸入說明】",
    "第一行輸入整數(int) a",
    "第二行輸入整數(int) b",
    "第三行輸入整數(int) c",
    "範例輸入說明:",
    "Sample Input:",
    "10",
    "10",
    "15",
    "【輸出說明】",
    "若符合多種三角形則按照輸出格式編號順序輸出",
    "輸出格式如下：",
    "1. 不能成為三角形：輸出Not Triangle。",
    "2. 正三角形：輸出Equilateral Triangle。",
    "3. 等腰三角形：輸出Isosceles Triangle",
    "4. 鈍角三角形:輸出Obtuse Triangle。",
    "5. 銳角三角形: 輸出Acute Triangle。",
    "6. 直角三角形:輸出Right Triangle。",
    "範例輸出說明:",
    "Isosceles Triangle",
    "Obtuse Triangle"
  ],
  "testcase": {
    "codeType": 0,
    "cases": [
      {
        "input": [
          "4",
          "1",
          "1"
        ],
        "output": [
          "Not Triangle"
        ]
      },
      {
        "input": [
          "3",
          "3",
          "3"
        ],
        "output": [
          "Equilateral Triangle",
          "Isosceles Triangle",
          "Acute Triangle"
        ]
      },
      {
        "input": [
          "8",
          "11",
          "5"
        ],
        "output": [
          "Obtuse Triangle"
        ]
      },
      {
        "input": [
          "5",
          "7",
          "8"
        ],
        "output": [
          "Acute Triangle"
        ]
      },
      {
        "input": [
          "3",
          "4",
          "5"
        ],
        "output": [
          "Right Triangle"
        ]
      },
      {
        "input": [
          "5",
          "5",
          "8"
        ],
        "output": [
          "Isosceles Triangle",
          "Obtuse Triangle"
        ]
      },
      {
        "input": [
          "6",
          "6",
          "5"
        ],
        "output": [
          "Isosceles Triangle",
          "Acute Triangle"
        ]
      }
    ]
  },
  "sampleCode": [
    "def getType(data: list):",
    "  nums = sorted([data[0]**2, data[1]**2, data[2]**2])",
    "",
    "  if sum(nums[:2]) > nums[2]:",
    "    return 1",
    "  elif sum(nums[:2]) == nums[2]:",
    "    return 0",
    "  else:",
    "    return -1",
    "  ",
    "def checkValid(data: list):",
    "  data.sort()",
    "  if sum(data[:2]) > data[2]:",
    "    return True",
    "",
    "  return False",
    "",
    "def toSet(data: list):",
    "  res = []",
    "  for i in data:",
    "    if i in res: continue",
    "    res.append(i)",
    "",
    "  return res",
    "",
    "def main() -> None:",
    "  data = [int(input()), int(input()), int(input())]",
    "",
    "  if (not checkValid(data)):",
    "    print(\"Not Triangle\")",
    "    return",
    "",
    "  if (len(toSet(data)) == 1):",
    "    print(\"Equilateral Triangle\")",
    "",
    "  if (len(toSet(data)) <= 2):",
    "    print(\"Isosceles Triangle\")",
    "",
    "  if (getType(data) < 0):",
    "    print(\"Obtuse Triangle\")",
    "  elif (getType(data) == 0):",
    "    print(\"Right Triangle\")",
    "  else:",
    "    print(\"Acute Triangle\")",
    "",
    "  return",
    "",
    "main()"
  ]
}