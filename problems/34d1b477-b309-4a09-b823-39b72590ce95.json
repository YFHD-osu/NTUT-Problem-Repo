{
  "uuid": "34d1b477-b309-4a09-b823-39b72590ce95",
  "title": "6. 最佳資費選擇",
  "createDate": 1750302596246,
  "collections": [
    "9b99bc6a-12d6-4347-87c5-9cc2082e7508"
  ],
  "problem": [
    "輸入每月網內、網外、市話、通話時間(秒)及網內、網外簡訊則數，求花費最少的資費類型。",
    "費率如下表：",
    "資費類型      183型     383型     983型",
    "月租費        183元     383元     983元",
    "優惠內容月租費可抵等額通信費",
    "語音費率 網內 0.08      0.07      0.06",
    "(元/秒)  網外 0.1393     0.1304     0.1087",
    "(元/秒)  市話 0.1349     0.1217     0.1018",
    "簡訊費率 網內 1.1287     1.1127     0.9572",
    "(元/則)  網外 1.4803     1.2458     1.1243",
    "優惠內容月租費可抵等額通信費 :",
    "若總通信費(包含通話時間、簡訊數量)高於該資費類型的費用，則以原費用進行收費，若低於該資費類型的費用，則以該資費類型的費用進行收費。",
    "例如:",
    "選擇183型，總通信費為200元，則應繳金額為200元",
    "若總通信費為150元，則應繳金額為183元。",
    "【輸入說明】",
    "第一行，輸入網內語音(秒, Integer)",
    "第二行，輸入網外語音(秒, Integer)",
    "第三行，輸入市話(秒, Integer)",
    "第四行，輸入內簡訊數(Integer)",
    "第五行，輸入網外簡訊數(Integer)",
    "範例輸入說明:",
    "Sample Input:",
    "500",
    "120",
    "13",
    "2",
    "5",
    "【輸出說明】",
    "第一行，輸出最佳費用(無條件捨去至Integer)",
    "第二行，輸出最佳資費類型，(183, 383, 983)",
    "範例輸出說明:",
    "Sample Output:",
    "183",
    "183"
  ],
  "testcase": {
    "codeType": 0,
    "cases": [
      {
        "input": [
          "100",
          "100",
          "1",
          "1",
          "1"
        ],
        "output": [
          "183",
          "183"
        ]
      },
      {
        "input": [
          "1000",
          "1200",
          "100",
          "30",
          "30"
        ],
        "output": [
          "338",
          "183"
        ]
      },
      {
        "input": [
          "1000",
          "1800",
          "50",
          "30",
          "30"
        ],
        "output": [
          "383",
          "383"
        ]
      },
      {
        "input": [
          "2000",
          "1800",
          "50",
          "10",
          "10"
        ],
        "output": [
          "404",
          "383"
        ]
      },
      {
        "input": [
          "5000",
          "3000",
          "200",
          "100",
          "100"
        ],
        "output": [
          "983",
          "983"
        ]
      },
      {
        "input": [
          "6000",
          "2500",
          "300",
          "250",
          "250"
        ],
        "output": [
          "1182",
          "983"
        ]
      }
    ]
  },
  "sampleCode": [
    "import math",
    "",
    "_183 = [0.08, 0.1393, 0.1349, 1.1287, 1.4803]",
    "_383 = [0.07, 0.1304, 0.1217, 1.1127, 1.2458]",
    "_983 = [0.06, 0.1087, 0.1018, 0.9572, 1.1243]",
    "",
    "def calcMoney(flare: list, usage: list, minimun: int) -> float:",
    "  result = sum(map(lambda e: e[1]*flare[e[0]], enumerate(usage)))",
    "  return minimun if result < minimun else result",
    "",
    "def main() -> None:",
    "  usage = [int(input()), int(input()), int(input()), int(input()), int(input())]",
    "",
    "  _p1 = calcMoney(_183, usage, 183)",
    "  _p2 = calcMoney(_383, usage, 383)",
    "  _p3 = calcMoney(_983, usage, 983)",
    "",
    "  result = sorted([(_p1, \"183\"), (_p2, \"383\"), (_p3, \"983\")], key= lambda e: e[0])",
    "",
    "  print(math.floor(result[0][0]))",
    "  print(result[0][1])",
    "",
    "  return",
    "",
    "if __name__ == \"__main__\":",
    "  main()"
  ]
}