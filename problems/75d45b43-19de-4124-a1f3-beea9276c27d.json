{
  "uuid": "75d45b43-19de-4124-a1f3-beea9276c27d",
  "title": "13. 進制轉換",
  "createDate": 1742831940000,
  "collections": [
    "3e78a29a-20d2-49c6-8f99-25d7491caebd"
  ],
  "problem": [
    "※函式傳遞參數須使用指標",
    "",
    "",
    "在此題目中，您將要求將一個 M 進制的數字轉換為 N 進制的數字。例如，將一個八進制（基數為 8）數字轉換為二進制（基數為 2）或十進制（基數為 10）數字。",
    "",
    "你需要寫一個程式，這個程式接受用戶輸入的 M 進制數字，並將其轉換為 N 進制的數字。輸入和輸出的數字應該以字符串的形式表示。請注意，輸入的數字可能包含字母 A 到 Z，代表十進制數字 10 到 35。",
    "",
    "進制轉換方式:",
    "12進制(12AB)轉10進制=>",
    "10進制值為:12^3*1+12^2*2+12^1*10+12^0*11=2147",
    "",
    "10進制(19)轉2進制=>",
    "第一位:19%2=1, 10進制數值整除2等於9",
    "第二位:9%2=1, 10進制數值整除2等於4",
    "第三位:4%2=0, 10進制數值整除2等於2",
    "第四位:2%2=0, 10進制數值整除2等於1",
    "第五位:1%2=1, 1<2, 所以不再除以2",
    "由最高位輸出到最低位為:10011",
    "",
    "【輸入說明】",
    "第一行輸入M進制 (2<=M<=36)",
    "第二行輸入M進制的數值(1<=數值長度<=10)",
    "第三行輸入要轉換成什麼N進制 (2<=N<=36)",
    "",
    "範例輸入說明:",
    "Sample Input:",
    "13 (M=13，輸入為13進制)",
    "A45C (13進制的數值為A45C)",
    "8 (N=8，轉換成8進制)",
    "",
    "【輸出說明】",
    "第一行輸出進制轉換完的結果，從最高位輸出到最低位",
    "",
    "範例輸出說明:",
    "54303",
    "(13進制先轉換成10進制=>13^3*10+13^2*4+13^1*5+13^0*12=22723",
    "10進制再轉換成8進制=>",
    "第一位:22723%8=3, 10進制數值整除8等於2840",
    "第二位:2840%8=0, 10進制數值整除8等於355",
    "第三位:355%8=3, 10進制數值整除8等於44",
    "第四位:44%8=4, 10進制數值整除8等於5",
    "第五位:5%8=5, 5<8, 所以不再除以8",
    "由最高位輸出到最低位為:54303)"
  ],
  "testcase": {
    "codeType": 1,
    "cases": [
      {
        "input": [
          "20",
          "ABC8EE",
          "7"
        ],
        "output": [
          "560541504"
        ]
      },
      {
        "input": [
          "35",
          "C1230",
          "35"
        ],
        "output": [
          "C1230"
        ]
      },
      {
        "input": [
          "25",
          "12DD34",
          "30"
        ],
        "output": [
          "D8DGO"
        ]
      },
      {
        "input": [
          "32",
          "FFF59C",
          "2"
        ],
        "output": [
          "11110111101111001010100101100"
        ]
      },
      {
        "input": [
          "9",
          "0",
          "12"
        ],
        "output": [
          "0"
        ]
      }
    ]
  },
  "sampleCode": [
    "#include <stdio.h>",
    "",
    "int length(char (*s)[]);",
    "short alphaToNumber(char s);",
    "char numberToAlpha(unsigned int n);",
    "unsigned long long stringToNumber(char (*s)[], int base);",
    "void numberToString(char (*s)[], unsigned int num, int base);",
    "void revPrint(char (*s)[]);",
    "",
    "unsigned long power(int base, int times) {",
    "  unsigned long sum = 1;",
    "  ",
    "  for (int i=0; i<times ; i++)",
    "    sum *= base;",
    "",
    "  return sum;",
    "}",
    "",
    "int main() {",
    "  int iptBase, optBase;",
    "  char iptValue[11];",
    "",
    "  scanf(\"%d\", &iptBase);",
    "  getchar();",
    "",
    "  ",
    "  scanf(\"%s\", &iptValue);",
    "  getchar();",
    "  ",
    "  scanf(\"%d\", &optBase);",
    "",
    "  unsigned long long number = stringToNumber(&iptValue, iptBase);",
    "",
    "  if (number == 0) {",
    "    printf(\"0\\n\");",
    "    return 0;",
    "  }",
    "",
    "  char buf[1000];",
    "  numberToString(&buf, number, optBase);",
    "",
    "",
    "  revPrint(&buf);",
    "  ",
    "  return 0;",
    "}",
    "",
    "unsigned long long stringToNumber(char (*s)[], int base) {",
    "  unsigned long long sum = 0;",
    "  int len = length(s);",
    "  int index = len;",
    "",
    "  while (index > 0) {",
    "    index --;",
    "",
    "    sum += power(base, index) * alphaToNumber((*s)[len - index - 1]);",
    "  }",
    "",
    "  return sum;",
    "}",
    "",
    "void numberToString(char (*s)[], unsigned int num, int base) {",
    "  int index = 0;",
    "",
    "  while (num > 0) {",
    "    char a = numberToAlpha(num % base);",
    "    (*s)[index] = a;",
    "    index ++;",
    "    num /= base;",
    "  }",
    "",
    "  (*s)[index] = '\\0';",
    "  return;",
    "}",
    "",
    "short alphaToNumber(char s) {",
    "  if (s >= '0' && s <= '9') {",
    "    return s - '0';",
    "  }",
    "",
    "  return 10 + s - 'A';",
    "}",
    "",
    "char numberToAlpha(unsigned int n) {",
    "  if (n >= 0 && n <= 9) {",
    "    return n + '0';",
    "  }",
    "",
    "  return (n-10) + 'A';",
    "} ",
    "",
    "int length(char (*s)[]) {",
    "  unsigned int sum = 0;",
    "",
    "  while ((*s)[sum] != '\\0') {",
    "    sum++;",
    "  }",
    "",
    "  return sum;",
    "}",
    "",
    "void revPrint(char (*s)[]) {",
    "  int index = length(s);",
    "",
    "  while (index > 0) {",
    "    index--;",
    "    printf(\"%c\", (*s)[index]);",
    "  }",
    "",
    "  printf(\"\\n\");",
    "}"
  ]
}