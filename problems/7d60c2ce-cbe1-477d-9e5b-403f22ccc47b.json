{
  "uuid": "7d60c2ce-cbe1-477d-9e5b-403f22ccc47b",
  "title": "11. 葛雷碼",
  "createDate": 1741967940000,
  "collections": [
    "df834ace-8de1-4f4e-bdcf-8c6b348a2109"
  ],
  "problem": [
    "反射二進位編碼-葛雷碼 (Gray code)，是編碼成兩個連續的不同位元。",
    "輸入 n，編碼範圍 0<=i<=2^n-1。",
    "n = 3，編碼 0~7 為 000, 001, 011, 010, 110, 111, 101, 100。",
    "其編碼規則如下",
    "G_1 = {0, 1}",
    "G_1_r = {1, 0}",
    "",
    "G_n = {0G_(n-1), 1G_(n-1)_r }",
    "if G_n = {g1, g2, g3, ..., gn}",
    "G_n_r = {g_n, g_(n-1), g_(n-2), ..., g_1}",
    "",
    "[G_n_r 是 G_n 的逆向順序]",
    "",
    "G_(n+1) = {0G_n, 1G_n_r}",
    "",
    "例如",
    "G_2 = {0G_1, 1G_1_r} = {00, 01, 11, 10}",
    "G_2_r = {10, 11, 01, 00}",
    "",
    "G_3 = {0G_2, 1G_2_r} = {000, 001, 011, 010, 110, 111, 101, 100}",
    "G_3_r = {100, 101, 111, 110, 010, 011, 001, 000}",
    "",
    "其遞迴公式為",
    "G(n, k) = k if n=1",
    "G(n, k) = 0G(n-1, k) if k<2^(n-1)",
    "G(n, k) = 1G(n-1, 2^n-1-k) if k>=2^(n-1)",
    "",
    "當 G(4, 7) = 0G(4-1, 7) = 0G(3, 7) = 01G(3-1, 2^3-1-7) = 01G(2, 0) = 010G(2-1, 0) = 010G(1, 0) = 0100",
    "",
    "依此撰寫遞迴程式，輸入 n, k，輸出 Gray code。",
    "",
    "【輸入說明】",
    "第一行：輸入第一個測試案例資料 (整數n k)",
    "第二行：輸入第二個測試案例資料 (整數n k)",
    "....",
    "第N行：-1 (結束)",
    "",
    "範例輸入：",
    "1 1 (第一筆資料，n=1、k=1)",
    "2 3 (第二筆資料，n=2、k=3)",
    "3 6 (第三筆資料，n=3、k=6)",
    "4 12 (第四筆資料，n=4、k=12)",
    "-1 (結束)",
    "",
    "【輸出說明】",
    "每一行輸出一個測試資料的結果",
    "",
    "範例輸出：",
    "1 (n=1、k=1的執行結果)",
    "10 (n=2、k=3的執行結果)",
    "101 (n=3、k=6的執行結果)",
    "1010 (n=4、k=12的執行結果)"
  ],
  "testcase": {
    "codeType": 1,
    "cases": [
      {
        "input": [
          "3 7",
          "4 15",
          "5 30",
          "1 0",
          "6 50",
          "-1"
        ],
        "output": [
          "100",
          "1000",
          "10001",
          "0",
          "101011"
        ]
      },
      {
        "input": [
          "3 4",
          "3 5",
          "3 6",
          "4 10",
          "4 11",
          "4 12",
          "5 16",
          "-1"
        ],
        "output": [
          "110",
          "111",
          "101",
          "1111",
          "1110",
          "1010",
          "11000"
        ]
      },
      {
        "input": [
          "5 1",
          "6 16",
          "7 4",
          "4 4",
          "-1"
        ],
        "output": [
          "00001",
          "011000",
          "0000110",
          "0110"
        ]
      }
    ]
  },
  "sampleCode": [
    "#include <stdio.h>",
    "",
    "void G(int n, int k, char (*buf)[], int index) {",
    "  if (n == 1) {",
    "    (*buf)[index] = (k == 1) ? '1' : '0';",
    "    (*buf)[index+1] = '\\0';",
    "    return;",
    "  }",
    "",
    "  if (k < (1<<(n-1))) {",
    "    (*buf)[index] = '0';",
    "    G(n-1, k, buf, index+1);",
    "    return;",
    "  }",
    "",
    "  (*buf)[index] = '1';",
    "  G(n-1, (1<<n)-1-k, buf, index+1);",
    "}",
    "",
    "int main() {",
    "  int n, k;",
    "  while (1) {",
    "    scanf(\"%d\", &n);",
    "    if (n==-1) break;",
    "    scanf(\"%d\", &k);",
    "    getchar();",
    "    char buf[n];",
    "    G(n, k, &buf, 0);",
    "    printf(\"%s\\n\", buf);",
    "  }",
    "  return 0;",
    "}"
  ]
}