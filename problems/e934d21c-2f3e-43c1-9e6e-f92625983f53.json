{
  "uuid": "e934d21c-2f3e-43c1-9e6e-f92625983f53",
  "title": "017 金魚與數字金字塔",
  "createDate": 1750301438546,
  "collections": [
    "0c60f8d2-0afe-41de-825c-683e04a370e6"
  ],
  "problem": [
    "第一行，輸入一個整數n，1",
    "第二行，輸入一個整數m，0<=m。",
    "第三行，輸入一個整數c，c=1,2。",
    "範例輸入說明:",
    "Sample Input1:",
    "3(整數N)",
    "2(整數M)",
    "1(整數C)",
    "Sample Input2:",
    "4(整數N)",
    "1(整數M)",
    "2(整數C)"
  ],
  "testcase": {
    "codeType": 0,
    "cases": [
      {
        "input": [
          "2",
          "0",
          "1"
        ],
        "output": [
          "*__*_",
          "*****",
          "*__*_"
        ]
      },
      {
        "input": [
          "5",
          "1",
          "1"
        ],
        "output": [
          "____*________*",
          "___***______**",
          "__*****____***",
          "_*******__****",
          "**************",
          "_*******__****",
          "__*****____***",
          "___***______**",
          "____*________*"
        ]
      },
      {
        "input": [
          "6",
          "0",
          "1"
        ],
        "output": [
          "*__________*_____",
          "**________***____",
          "***______*****___",
          "****____*******__",
          "*****__*********_",
          "*****************",
          "*****__*********_",
          "****____*******__",
          "***______*****___",
          "**________***____",
          "*__________*_____"
        ]
      },
      {
        "input": [
          "3",
          "0",
          "2"
        ],
        "output": [
          "32123",
          "_212_",
          "__1__"
        ]
      },
      {
        "input": [
          "6",
          "1",
          "2"
        ],
        "output": [
          "_____1_____",
          "____212____",
          "___32123___",
          "__4321234__",
          "_543212345_",
          "65432123456"
        ]
      }
    ]
  },
  "sampleCode": [
    "def main():",
    "  N = int(input())",
    "  M = int(input())",
    "  C = int(input())",
    "",
    "  if (C==1):",
    "    [print(i) for i in goldFish(N, M%2)]",
    "  ",
    "  else:",
    "    if (M%2):",
    "      for i in pyramid(N): print(i)",
    "      return",
    "    ",
    "    for i in pyramid(N)[::-1]: print(i)",
    "",
    "def pyramid(n: int) -> list:",
    "  return [\"_\"*(n-i-1) + \"\".join([str(j) for j in range(i+1, 1 , -1)]) + \"\".join([str(j) for j in range(1, i+2)]) + \"_\"*(n-i-1) for i in range(n)]",
    "",
    "def goldFish(N: int, mode: int):",
    "  if (mode): # If M is odd",
    "    return uGoldFish(N) + dGoldFish(N)",
    "  ",
    "  return [i[::-1] for i in uGoldFish(N)] + [i[::-1] for i in dGoldFish(N)]",
    "",
    "def uGoldFish(n: int):",
    "  return [\"_\" * (n-i-1) + \"*\"*(2*i+1) + \"_\"*(2*(n-i-1)) + \"*\"*(i+1) for i in range(n)]",
    "",
    "def dGoldFish(n: int):",
    "  return [\"_\"*(i+1) + \"*\"*(2*(n-i-1)-1) + \"_\"*(2*(i+1)) + \"*\"*(n-i-1) for i in range(n-1)]",
    "",
    "if __name__ == \"__main__\":",
    "  main()"
  ]
}