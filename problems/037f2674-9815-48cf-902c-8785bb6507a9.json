{
  "uuid": "037f2674-9815-48cf-902c-8785bb6507a9",
  "title": "6. 工作排程",
  "createDate": 1744895429487,
  "collections": [
    "6c4fc672-ecfe-4614-a103-20ebd6e325fa"
  ],
  "problem": [
    "有 M 個工作要在 N 台機器上加工，每個工作 i 包含若干個工序 Oij，這些工序須依序加工，也就是前一道工序Oi(j-1)完成後才可開始下一道工序 Oij。",
    "每道工序 Oij 可用一個有序對(Kij,Tij)表示它需在機器Kij 上面花費 Tij 小時完成，而每台機器一次只能處理一道工序。",
    "所謂一道工序 Oij 的「最早完成時間的 Cij ｣是指考慮目前排程中機器 Kij 之可用性以及前一道工序 Oi(j-1)(若該工序存在)之完成時間後可得的最早完成時間。",
    "",
    "所有工序的排程規則如下：",
    "針對每一個工作的第一個尚未排程的工序，計算出此工序的「最早完成時間｣，然後挑選出最早完成時間最小的工序納入排程中，如果有多個完成時間都是最小，",
    "則挑選其中最小工作編號之工序，一個工序一旦納入排程就不會再更改，重複以上步驟直到所有工序皆納入排程。",
    "",
    "輸入說明:",
    "Line 1: 正整數 N 與 M，N 代表有多少台機器，M 代表有多少個工作。",
    "  接下來會有 M 個工作資訊 ， 輸入順序即為工作編號順序，每個工作資訊有兩行，第一行為整數 P，代表到工序數量。",
    "Line 2: 有 2 * P 個整數，依序每兩個一組代表一道工序的機器編號與需求時間，每個整數間以空白符號相隔開。",
    "",
    "輸出說明:",
    "輸出每個工作完成時間的總和",
    "",
    "此題目的智慧財產權歸 北科大-郭忠義 教授所有，且已獲其明確授權使用。"
  ],
  "testcase": {
    "codeType": 1,
    "cases": [
      {
        "input": [
          "4 4",
          "3",
          "0 3 0 5 0 8",
          "2",
          "1 2 1 6",
          "4",
          "2 3 2 4 2 1 2 1",
          "3",
          "3 1 3 2 3 3"
        ],
        "output": [
          "39"
        ]
      },
      {
        "input": [
          "3 3",
          "1",
          "2 8",
          "1",
          "2 4",
          "1",
          "2 9"
        ],
        "output": [
          "37"
        ]
      },
      {
        "input": [
          "4 4",
          "3",
          "0 3 1 8 1 1",
          "4",
          "0 6 0 1 1 7 1 8",
          "1",
          "2 6",
          "3",
          "2 1 2 2 2 2"
        ],
        "output": [
          "55"
        ]
      },
      {
        "input": [
          "4 3",
          "3",
          "0 3 2 6 1 5",
          "2",
          "0 4 2 5",
          "1",
          "0 6"
        ],
        "output": [
          "41"
        ]
      },
      {
        "input": [
          "1 5",
          "3",
          "0 1 0 2 0 3",
          "10",
          "0 1 0 5 0 9 0 1 0 3 0",
          "8 0 1 0 3 0 10 0 9",
          "1",
          "0 40",
          "2",
          "0 9 0 46",
          "5",
          "0 11 0 22 0 7 0 1 0 3"
        ],
        "output": [
          "525"
        ]
      },
      {
        "input": [
          "3 3",
          "2",
          "0 2 0 4",
          "3",
          "1 2 1 3 1 5",
          "2",
          "2 2 2 5"
        ],
        "output": [
          "23"
        ]
      },
      {
        "input": [
          "4 2",
          "1",
          "0 3",
          "1",
          "0 5"
        ],
        "output": [
          "11"
        ]
      },
      {
        "input": [
          "4 4",
          "3",
          "0 2 1 3 1 4",
          "4",
          "0 3 0 2 1 5 1 6",
          "1",
          "2 4",
          "2",
          "2 2 2 1"
        ],
        "output": [
          "39"
        ]
      },
      {
        "input": [
          "3 3",
          "3",
          "0 1 2 4 1 3",
          "3",
          "0 2 2 2 1 1",
          "1",
          "0 3"
        ],
        "output": [
          "23"
        ]
      },
      {
        "input": [
          "1 5",
          "3",
          "0 2 0 4 0 6",
          "10",
          "0 2 0 5 0 7 0 9 0 10",
          "0 9 0 7 0 5 0 12 0 7",
          "1",
          "0 30",
          "2",
          "0 14 0 36",
          "5",
          "0 17 0 23 0 7 0 3 0 5"
        ],
        "output": [
          "662"
        ]
      }
    ]
  }
}