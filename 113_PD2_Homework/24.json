{
  "_comment": null,
  
  "title": "24. 魔術方塊",
  "createDate": 1744905540000,
  "collections": [],
  "problem": [
    "有一魔術方塊有六面，一開始白色朝自己，藍色朝上，紅色朝右",
    "立體示意圖所示：",
    "<img src='https://i.imgur.com/qHbxGdc.png'>",
    "展開示意圖所示：",
    "<img src='https://i.imgur.com/zYYaWRK.jpg'>",
    "",
    "顏色編號，1: 藍色，2: 紅色，3: 黃色，4: 白色，5: 橘色，6:綠色。",
    "",
    "魔術方塊的操作：",
    "10 表示直欄(column)最左邊向前轉一次。",
    "11 表示直欄(column)中間向前轉一次。",
    "12 表示直欄(column)最右邊向前轉一次。",
    "20 表示橫列(row)最上面向左轉一次。",
    "21 表示橫列(row)中間向左轉一次。",
    "22 表示橫列(row)最下面向左轉一次。",
    "註：以上修改操作，皆不會轉動魔術方塊的本體，只會針對欄或列做操作",
    "示意圖所示：",
    "<img src='https://i.imgur.com/B8dJXrK.png'>",
    "",
    "向前轉：即對於紅色面為順時針旋轉方向",
    "向左轉：即對於藍色面為順時針旋轉方向",
    "",
    "經過 M 次操作後，輸出魔術方塊「面向自己」(即原始白色面) 顏色編號。",
    "",
    "",
    "【輸入說明】",
    "第一行，輸入一整數 M，代表魔術方塊的操作次數，",
    "其後 M 行，每一行輸入一整數，代表魔術方塊的操作方式。",
    "",
    "範例輸入說明:",
    "2 (接下來會有 2 次修改操作)",
    "10 (表示直欄最左邊向前轉一次)",
    "20 (表示橫列最上面向左轉一次)",
    "",
    "經過10操作後魔術方塊顏色編號為：",
    "6 4 4",
    "6 4 4",
    "6 4 4",
    "",
    "經過20操作後魔術方塊顏色編號為：",
    "2 2 2",
    "6 4 4",
    "6 4 4",
    "",
    "【輸出說明】",
    "經過 M 次操作後，輸出「面向自己」 9 格的顏色編號。",
    "註：row 的數字間以一個空格區隔",
    "",
    "範例輸出說明:",
    "2 2 2",
    "6 4 4",
    "6 4 4"
  ],
  "testcase": {
    "codeType": 1,
    "cases": [
      {
        "input": [
          "2",
          "10",
          "12"
        ],
        "output": [
          "6 4 6",
          "6 4 6",
          "6 4 6"
        ]
      },
      {
        "input": [
          "4",
          "21",
          "21",
          "10",
          "21"
        ],
        "output": [
          "6 4 4",
          "5 5 5",
          "6 4 4"
        ]
      },
      {
        "input": [
          "6",
          "20",
          "10",
          "10",
          "20",
          "21",
          "21"
        ],
        "output": [
          "3 3 3",
          "3 3 4",
          "5 4 4"
        ]
      },
      {
        "input": [
          "8",
          "10",
          "20",
          "10",
          "20",
          "10",
          "22",
          "21",
          "11"
        ],
        "output": [
          "1 6 1",
          "2 6 2",
          "2 1 2"
        ]
      }
    ]
  },
  "sampleCode": [
    "#include <stdio.h>",
    "",
    "enum { U, D, F, B, L, R };          /* 6 個面：Up, Down, Front, Back, Left, Right */",
    "",
    "int cube[6][3][3];                  /* cube[面][row][col] */",
    "",
    "/* 對單一面 3×3 做順時針 (CW) 旋轉 */",
    "void rotate_face_cw(int f)",
    "{",
    "    int t[3][3];",
    "    for (int i = 0; i < 3; ++i)",
    "        for (int j = 0; j < 3; ++j)",
    "            t[i][j] = cube[f][2 - j][i];      /* (row,col) -> (col,2‑row) */",
    "",
    "    for (int i = 0; i < 3; ++i)",
    "        for (int j = 0; j < 3; ++j)",
    "            cube[f][i][j] = t[i][j];",
    "}",
    "",
    "/* 逆時針 (CCW) ＝ CW 轉三次 */",
    "void rotate_face_ccw(int f)",
    "{",
    "    rotate_face_cw(f);",
    "    rotate_face_cw(f);",
    "    rotate_face_cw(f);",
    "}",
    "",
    "/* 直欄向前轉：10/11/12 → k = 0/1/2 */",
    "void column_forward(int k)",
    "{",
    "    for (int i = 0; i < 3; ++i) {",
    "        int tmp                = cube[F][i][k];",
    "        cube[F][i][k]          = cube[D][i][k];",
    "        cube[D][i][k]          = cube[B][2 - i][2 - k];",
    "        cube[B][2 - i][2 - k]  = cube[U][i][k];",
    "        cube[U][i][k]          = tmp;",
    "    }",
    "",
    "    /* 如果是最左或最右欄，還要把 L 或 R 面本身一起轉 */",
    "    if (k == 0)",
    "        rotate_face_ccw(L);     /* L' */",
    "    else if (k == 2)",
    "        rotate_face_cw(R);      /* R  */",
    "}",
    "",
    "/* 橫列向左轉：20/21/22 → j = 0/1/2 */",
    "void row_left(int j)",
    "{",
    "    for (int c = 0; c < 3; ++c) {",
    "        int tmp           = cube[F][j][c];",
    "        cube[F][j][c]     = cube[R][j][c];   /* R → F */",
    "        cube[R][j][c]     = cube[B][j][c];   /* B → R  (不再左右反轉) */",
    "        cube[B][j][c]     = cube[L][j][c];   /* L → B */",
    "        cube[L][j][c]     = tmp;             /* F → L */",
    "    }",
    "",
    "    /* 若是最上或最下列，同時旋轉 U 或 D 面 */",
    "    if (j == 0)",
    "        rotate_face_cw(U);      /* U  */",
    "    else if (j == 2)",
    "        rotate_face_ccw(D);     /* D' */",
    "}",
    "",
    "",
    "int main(void)",
    "{",
    "    int M;",
    "    if (scanf(\"%d\", &M) != 1) return 0;",
    "",
    "    /* 初始配色：題目給的顏色編號 */",
    "    for (int i = 0; i < 3; ++i)",
    "        for (int j = 0; j < 3; ++j) {",
    "            cube[U][i][j] = 1;  /* 藍 Blue */",
    "            cube[D][i][j] = 6;  /* 綠 Green */",
    "            cube[F][i][j] = 4;  /* 白 White */",
    "            cube[B][i][j] = 3;  /* 黃 Yellow */",
    "            cube[L][i][j] = 5;  /* 橘 Orange */",
    "            cube[R][i][j] = 2;  /* 紅 Red */",
    "        }",
    "",
    "    /* 逐筆操作 */",
    "    for (int m = 0; m < M; ++m) {",
    "        int op;  scanf(\"%d\", &op);",
    "        if (op >= 10 && op <= 12)          /* 直欄 */",
    "            column_forward(op - 10);",
    "        else if (op >= 20 && op <= 22)     /* 橫列 */",
    "            row_left(op - 20);",
    "    }",
    "",
    "    /* 輸出正面 (Front) 3×3 */",
    "    for (int i = 0; i < 3; ++i) {",
    "        for (int j = 0; j < 3; ++j) {",
    "            if (j) putchar(' ');",
    "            printf(\"%d\", cube[F][i][j]);",
    "        }",
    "        if (i != 2) putchar('\\n');",
    "    }",
    "    return 0;",
    "}"
  ]
}