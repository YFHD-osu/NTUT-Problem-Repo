{
  "_comment": "Auto-generated from 019.py and 019.md",
  "title": "019 地雷矩陣",
  "createDate": 1750301438548,
  "problem": [
    "第一行：輸入一個正整數N，代表矩陣大小。",
    "接著有N行輸入，每一行都有N個值，以0 或 1 表示，1代表地雷，0代表無地雷。",
    "範例輸入說明:",
    "Sample Input:",
    "3",
    "0 1 0",
    "0 0 0",
    "1 0 1"
  ],
  "testcase": {
    "codeType": 0,
    "cases": [
      {
        "input": [
          "4",
          "0 1 0 0",
          "1 0 1 0",
          "0 1 0 1",
          "0 0 1 0"
        ],
        "output": [
          "2 0 2 1",
          "0 4 0 2",
          "2 0 4 0",
          "1 2 0 2"
        ]
      },
      {
        "input": [
          "5",
          "0 0 1 0 0",
          "1 0 0 0 1",
          "0 1 0 1 0",
          "1 0 0 0 1",
          "0 0 1 0 0"
        ],
        "output": [
          "1 2 0 2 1",
          "0 3 3 3 0",
          "3 0 2 0 3",
          "0 3 3 3 0",
          "1 2 0 2 1"
        ]
      },
      {
        "input": [
          "2",
          "1 0",
          "0 1"
        ],
        "output": [
          "0 2",
          "2 0"
        ]
      },
      {
        "input": [
          "4",
          "1 1 1 1",
          "1 0 0 1",
          "1 0 0 1",
          "1 1 1 1"
        ],
        "output": [
          "0 0 0 0",
          "0 5 5 0",
          "0 5 5 0",
          "0 0 0 0"
        ]
      }
    ]
  },
  "sampleCode": [
    "def main() -> None:",
    "  N = int(input())",
    "  data = inputMatrix(N)",
    "",
    "  for r in range(N):",
    "    for c in range(N):",
    "      if data[r][c] == 0:",
    "        print(count(r, c, data), end=\" \" if c != N-1 else \"\\n\")",
    "      else:",
    "        print(\"0\", end=(\" \" if c != N-1 else \"\\n\"))",
    "",
    "def inputMatrix(n: int) -> list:",
    "  res = []",
    "  for _ in range(n):",
    "    res.append([int(i) for i in input().split()])",
    "  ",
    "  return res",
    "",
    "def count(row: int, column: int, data: list):",
    "  num = 0",
    "  for r in range(row-1, row+2):",
    "    for c in range(column-1, column+2):",
    "      if r < 0 or r >= len(data): continue",
    "      if c < 0 or c >= len(data): continue",
    "      if data[r][c]: num += 1",
    "",
    "  return num",
    "",
    "if __name__ == \"__main__\":",
    "  main()"
  ]
}