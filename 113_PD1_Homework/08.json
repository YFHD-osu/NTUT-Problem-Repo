{
  "_comment": "Auto-generated from 008.py and 008.md",
  "title": "008 撲克牌",
  "createDate": 1750301438549,
  "problem": [
    "第一 ~ 三行，輸入玩家X的三張撲克牌",
    "第四 ~ 六行，輸入玩家Y的三張撲克牌",
    "範例輸入說明:",
    "Sample Input:",
    "5",
    "J",
    "6",
    "3",
    "A",
    "2"
  ],
  "testcase": {
    "codeType": 0,
    "cases": [
      {
        "input": [
          "A",
          "6",
          "J",
          "5",
          "2",
          "J"
        ],
        "output": [
          "7.5",
          "7.5",
          "Tie"
        ]
      },
      {
        "input": [
          "6",
          "4",
          "Q",
          "A",
          "2",
          "7"
        ],
        "output": [
          "10.5",
          "10",
          "X Win"
        ]
      },
      {
        "input": [
          "J",
          "A",
          "K",
          "A",
          "A",
          "Q"
        ],
        "output": [
          "2",
          "2.5",
          "Y Win"
        ]
      },
      {
        "input": [
          "A",
          "4",
          "2",
          "5",
          "8",
          "3"
        ],
        "output": [
          "7",
          "0",
          "X Win"
        ]
      },
      {
        "input": [
          "3",
          "7",
          "A",
          "K",
          "4",
          "7"
        ],
        "output": [
          "0",
          "0",
          "Tie"
        ]
      }
    ]
  },
  "sampleCode": [
    "_cards = [\"A\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\"]",
    "",
    "def fetchPoints(val: str) -> float:",
    "  if val in _cards:",
    "    return _cards.index(val) + 1",
    "",
    "  return .5",
    "",
    "def correctPoint(val: float) -> float:",
    "  return 0 if val > 10.5 else val",
    "",
    "def fixDisplay(val: float):",
    "  if isinstance(val, int):",
    "    return val",
    "  ",
    "  if not val * 10 % 10:",
    "    return int(val)",
    "  ",
    "  return val",
    "",
    "def main() -> None:",
    "  X = [input(), input(), input()]",
    "  Y = [input(), input(), input()]",
    "",
    "  xPoints = correctPoint(sum(map(fetchPoints, X)))",
    "  yPoints = correctPoint(sum(map(fetchPoints, Y)))",
    "",
    "  print(fixDisplay(xPoints))",
    "  print(fixDisplay(yPoints))",
    "  if abs(10.5 - xPoints) < abs(10.5 - yPoints):",
    "    print(\"X Win\")",
    "  elif xPoints == yPoints:",
    "    print(\"Tie\")",
    "  else:",
    "    print(\"Y Win\")",
    "  ",
    "  return",
    "",
    "if __name__ == \"__main__\":",
    "  main()"
  ]
}