{
  "_comment": "Auto-generated from 010.py and 010.md",
  "title": "10. 保齡球",
  "createDate": 1750302596247,
  "problem": [
    "小明到保齡球館打保齡球,一輪有三局，試算總分，保齡球規則如下:",
    "(1)每局有10個保齡球瓶，擊倒1個球瓶得1分",
    "(2)每局最多有兩次投球機會",
    "(3)當局如果第一球將10個保齡球瓶全部擊倒(稱為strike)，當局只有一次投球機會，此局計分除了10分外，再加上後面兩球擊倒的球瓶數。",
    "(4)當局如果第一球未將10個保齡球瓶全部擊倒，但加上第二球則將10個保齡球瓶全部擊倒(稱為spare)，此局計分除了10分外，再加上後面一球擊倒的球瓶數。",
    "(5)當局若兩球都無法將球瓶全部擊倒，此局計分為兩球擊倒的球瓶數。",
    "(6)第3局如果第一球將球瓶全部擊倒，後面還有2次投球機會。",
    "(7)第3局如果第二球才將球瓶全部擊倒，後面還有1次投球機會。",
    "(8)第3局若兩球都無法將球瓶全部擊倒，則結束比賽。",
    "(9)總分為3局分數總合。",
    "【輸入說明】",
    "第1局第一球分數(int,0~10)",
    "第1局第一球分數(上一球為10則省略) (int,和上一球總和最多為10)",
    "第2局第一球分數 (int,0~10)",
    "第2局第二球分數(上一球為10則省略) (int,和上一球總和最多為10)",
    "第3局第一球分數 (int,0~10)",
    "第3局第二球分數(上一球為10則省略) (int,和上一球總和最多為10)",
    "第一次額外投球分數(第3局投球總分為10才輸入) (int,0~10)",
    "第二次額外投球分數(第3局第一球為10才輸入) (int,0~10)",
    "範例輸入說明:",
    "Sample Input:",
    "5(第1局第一球)",
    "5(第1局第二球) (因為spare，第一局分數為該局投球得分加下一次投球分數，為13分)",
    "3(第2局第一球)",
    "2(第2局第二球)(第二局分數為該局得分，為5分)",
    "10(第3局第一球)(因為strike，第十局分數為該局投球得分加下二次投球分數，為18分)",
    "0(因為第3局第一次就全倒，第一次額外投球)",
    "8(因為第3局第一次就全倒，第二次額外投球)",
    "【輸出說明】",
    "總分 (int)",
    "範例輸出說明:",
    "36",
    "(每局分數總和。為13+5+18)"
  ],
  "testcase": {
    "codeType": 0,
    "cases": [
      {
        "input": [
          "5",
          "5",
          "3",
          "2",
          "10",
          "0",
          "8"
        ],
        "output": [
          "36"
        ]
      },
      {
        "input": [
          "2",
          "5",
          "7",
          "1",
          "1",
          "3"
        ],
        "output": [
          "19"
        ]
      },
      {
        "input": [
          "10",
          "5",
          "5",
          "1",
          "9",
          "10"
        ],
        "output": [
          "51"
        ]
      }
    ]
  },
  "sampleCode": [
    "balls = []",
    "",
    "def addBall(forceMode: int = None) -> tuple:",
    "  if forceMode == 0:",
    "    return (-1, int(input()), int(input()))",
    "  elif forceMode == 1:",
    "    return (-1, int(input()))",
    "",
    "  first = int(input())",
    "  if first == 10:",
    "    return (0, 10)",
    "",
    "  second = int(input())",
    "  if second + first == 10:",
    "    return (1, first, second)",
    "  else:",
    "    return (2, first, second)",
    "",
    "def fetchBalls(start: int, count: int, balls: list) -> list:",
    "  if count <= 0:",
    "    return 0",
    "  ",
    "  n = len(balls[start]) - 1",
    "  ",
    "  if count > n:",
    "    this = sum([balls[start][i+1] for i in range(n)])",
    "    return this + fetchBalls(start+1, count - n, balls)",
    "  ",
    "  if count == 1:",
    "    return balls[start][1]",
    "",
    "  return balls[start][1] + balls[start][2]",
    "  ",
    "  ",
    "def fetchPoint(index: int, balls: list) -> int:",
    "  ballType = balls[index][0]",
    "",
    "  if ballType == 0:",
    "    return 10 + fetchBalls(index+1, 2, balls)",
    "  elif ballType == 1:",
    "    return 10 + fetchBalls(index+1, 1, balls)",
    "  elif ballType == 2:",
    "    return balls[index][1] + balls[index][2]",
    "  else:",
    "    return 0",
    "  ",
    "def main() -> None:",
    "  for _ in range(3):",
    "    balls.append(addBall())",
    "    ",
    "  if balls[-1][0] != 2:",
    "    balls.append(addBall(balls[-1][0]))",
    "",
    "  ans = [fetchPoint(i, balls) for i in range(3)]",
    "  print(sum(ans))",
    "",
    "if __name__ == \"__main__\":",
    "  main() "
  ]
}