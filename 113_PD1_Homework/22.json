{
  "_comment": "Auto-generated from 022.py and 022.md",
  "title": "022 電路",
  "createDate": 1750301438548,
  "problem": [
    "第一行：輸入第一個測試案例資料 (二進位8位元)",
    "第二行：輸入第二個測試案例資料 (二進位8位元)",
    "....",
    "第N行：-1 (結束)",
    "範例輸入：",
    "00001010",
    "-1"
  ],
  "testcase": {
    "codeType": 0,
    "cases": [
      {
        "input": [
          "00000000",
          "11111111",
          "00000001",
          "10000000",
          "-1"
        ],
        "output": [
          "0000",
          "1000",
          "0000",
          "0111"
        ]
      },
      {
        "input": [
          "01111110",
          "00001000",
          "00111100",
          "00011000",
          "11000011",
          "-1"
        ],
        "output": [
          "0111",
          "0011",
          "0110",
          "0101",
          "1000"
        ]
      },
      {
        "input": [
          "11000111",
          "01110111",
          "11110001",
          "00001010",
          "01010000",
          "00000111",
          "-1"
        ],
        "output": [
          "1000",
          "0111",
          "1000",
          "0100",
          "0111",
          "0011"
        ]
      }
    ]
  },
  "sampleCode": [
    "def main():",
    "  while 1:",
    "    data = input()",
    "    if data == \"-1\": break",
    "",
    "    num = bin2int(data)",
    "",
    "    depth = C(num)",
    "    ",
    "    print(int2bin(depth))",
    "  pass",
    "",
    "def C(m: int, depth: int = 0) -> None:",
    "  if m==0 or m==1:",
    "    return depth",
    "  ",
    "  if not m%2:",
    "    return C(m//2, depth + 1)",
    "  ",
    "  return C((m+1) // 2, depth + 1)",
    "",
    "def bin2int(a: str) -> int:",
    "  res = 0",
    "  index = 0",
    "  while (len(a)):",
    "    res += 2**index if a[-1] == \"1\" else 0",
    "    a = a[:-1]",
    "    index += 1",
    "",
    "  return res",
    "",
    "def int2bin(a: int) -> str:",
    "  res = \"\"",
    "  while (a != 0):",
    "    res += f\"{a%2}\"",
    "    a //= 2",
    "",
    "  return res[::-1].rjust(4, \"0\")",
    "",
    "if __name__ == \"__main__\":",
    "  main()"
  ]
}