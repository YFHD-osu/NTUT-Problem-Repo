{
  "_comment": "Auto-generated from 009.py and 009.md",
  "title": "9. 印形狀",
  "createDate": 1750302596247,
  "problem": [
    "根據輸入的數字N來決定要印出三角形還是正方形，若N為奇數則印出'*'符號組成的N層三角形，若為偶數則印出空心正方形，空白部分請使用'#'符號替代。",
    "【輸入說明】",
    "第一行，輸入一個整數N，2<=N<20。",
    "範例輸入說明:",
    "Sample Input:",
    "3(整數N)",
    "【輸出說明】",
    "若N為奇數，輸出一個高度為N的三角形，空白部分請使用'#'符號替代",
    "若N為偶數，輸出一個邊長為N的空心正方形，空白部分請使用'#'符號替代",
    "範例輸出說明1:",
    "##*",
    "#***",
    "*****",
    "範例輸出說明2:",
    "****",
    "*##*",
    "*##*",
    "****"
  ],
  "testcase": {
    "codeType": 0,
    "cases": [
      {
        "input": [
          "3"
        ],
        "output": [
          "##*",
          "#***",
          "*****"
        ]
      },
      {
        "input": [
          "4"
        ],
        "output": [
          "****",
          "*##*",
          "*##*",
          "****"
        ]
      },
      {
        "input": [
          "8"
        ],
        "output": [
          "********",
          "*######*",
          "*######*",
          "*######*",
          "*######*",
          "*######*",
          "*######*",
          "********"
        ]
      },
      {
        "input": [
          "11"
        ],
        "output": [
          "##########*",
          "#########***",
          "########*****",
          "#######*******",
          "######*********",
          "#####***********",
          "####*************",
          "###***************",
          "##*****************",
          "#*******************",
          "*********************"
        ]
      }
    ]
  },
  "sampleCode": [
    "def triangle(n: int) -> None:",
    "  for i in range(n):",
    "    print(\"#\" * (n-i-1) + \"*\" * (2*i+1))",
    "",
    "  return ",
    "",
    "def square(n: int) -> None:",
    "  print(\"*\" * n)",
    "  for i in range(n-2):",
    "    print(\"*\" + \"#\" * (n-2) + \"*\")",
    "  print(\"*\" * n)",
    "  return ",
    "",
    "def main() -> None:",
    "  n = int(input())",
    "",
    "  if n % 2:",
    "    return triangle(n)",
    "",
    "  return square(n)",
    "",
    "if __name__ == \"__main__\":",
    "  main()"
  ]
}