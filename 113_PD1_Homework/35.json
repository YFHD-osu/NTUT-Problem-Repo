{
  "_comment": "Auto-generated from 035.py and 035.md",
  "title": "035 帳號密碼驗證",
  "createDate": 1750301438545,
  "problem": [
    "第一行：輸入帳號，即身份證字號",
    "第二行：輸入密碼",
    "範例輸入：",
    "A123456789",
    "abc"
  ],
  "testcase": {
    "codeType": 0,
    "cases": [
      {
        "input": [
          "a100133406",
          "0a1a2a3a4a5"
        ],
        "output": [
          "Wrong area code",
          "32"
        ]
      },
      {
        "input": [
          "O512865768",
          "!a@b#c$d"
        ],
        "output": [
          "Wrong gender code",
          "24 Not strong enough"
        ]
      },
      {
        "input": [
          "T115364658",
          "assdAsas8"
        ],
        "output": [
          "Illegal",
          "12 Not strong enough"
        ]
      },
      {
        "input": [
          "L211216230",
          "abSDSD123BCD!"
        ],
        "output": [
          "Pass",
          "34"
        ]
      },
      {
        "input": [
          "Q216147841",
          "ekr^*g155"
        ],
        "output": [
          "Pass",
          "20 Not strong enough"
        ]
      }
    ]
  },
  "sampleCode": [
    "def main() -> None:",
    "  identy = input()",
    "  passwd = input()",
    "",
    "  print(identVaild(identy))",
    "",
    "  score = fetchPasswdScore(passwd)",
    "  if score >= 30:",
    "    print(score)",
    "  else:",
    "    print(f\"{score} Not strong enough\")",
    "",
    "def identNum(a: str) -> int:",
    "  corr = {",
    "    'A': 10, 'B': 11, 'C': 12, 'D': 13, 'E': 14, 'F': 15,",
    "    'G': 16, 'H': 17, 'I': 34, 'J': 18, 'K': 19, 'L': 20,",
    "    'M': 21, 'N': 22, 'O': 35, 'P': 23, 'Q': 24, 'R': 25,",
    "    'S': 26, 'T': 27, 'U': 28, 'V': 29, 'W': 32, 'X': 30,",
    "    'Y': 31, 'Z': 33",
    "  }",
    "",
    "  return corr.get(a, 0)",
    "",
    "def identVaild(a: str) -> str:",
    "  if not a[0].isupper():",
    "    return \"Wrong area code\"",
    "  ",
    "  if not a[1] in ['2', '1']:",
    "    return \"Wrong gender code\" ",
    "  ",
    "  if (10 - (identSum(a) % 10)) != int(a[-1]) and (identSum(a) % 10) != 0:",
    "    return \"Illegal\"",
    "  ",
    "  if  (identSum(a) % 10) == 0 and (identSum(a) % 10) != int(a[-1]):",
    "    return \"Illegal\"",
    "",
    "  return \"Pass\"",
    "",
    "def identSum(a: str) -> int:",
    "  a = str(identNum(a[0])) + a[1:-1]",
    "",
    "  result = 0",
    "  for i in zip([1, 9, 8, 7, 6, 5, 4 ,3 ,2, 1], a):",
    "    result += i[0] * int(i[1])",
    "",
    "  return result",
    "",
    "def fetchPasswdScore(a: str):",
    "  score = 0",
    "",
    "  score += len(list(filter(lambda e: e.islower(), a)))",
    "  score += len(list(filter(lambda e: e.isupper(), a))) * 3",
    "  score += len(list(filter(lambda e: e.isdigit(), a))) * 2",
    "  score += len(list(filter(lambda e: e in '{ ~!@#$%^&*<>_+=}', a))) * 5",
    "  score += extraScore(a)",
    "  ",
    "  return score",
    "",
    "def extraScore(a: str) -> int:",
    "  if len(list(filter(lambda e: e.isdigit(), a))) < 5:",
    "    return 0",
    "  ",
    "  index = 1",
    "  count = 1 if a[0].isdigit() else 0",
    "  while (index < len(a)):",
    "    if (not a[index-1].isdigit()) and a[index].isdigit():",
    "      count += 1",
    "    index += 1",
    "  ",
    "  return 15 if count > 1 else 0",
    "  ",
    "if __name__ == \"__main__\":",
    "  # print(extraScore(\"0a1a2a3a4a5\"))",
    "  main()"
  ]
}